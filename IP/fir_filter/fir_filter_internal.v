// (C) 1992-2018 Intel Corporation.                            
// Intel, the Intel logo, Intel, MegaCore, NIOS II, Quartus and TalkBack words    
// and logos are trademarks of Intel Corporation or its subsidiaries in the U.S.  
// and/or other countries. Other marks and brands may be claimed as the property  
// of others. See Trademarks on intel.com for full list of Intel trademarks or    
// the Trademarks & Brands Names Database (if Intel) or See www.Intel.com/legal (if Altera) 
// Your use of Intel Corporation's design tools, logic functions and other        
// software and tools, and its AMPP partner logic functions, and any output       
// files any of the foregoing (including device programming or simulation         
// files), and any associated documentation or information are expressly subject  
// to the terms and conditions of the Altera Program License Subscription         
// Agreement, Intel MegaCore Function License Agreement, or other applicable      
// license agreement, including, without limitation, that your use is for the     
// sole purpose of programming logic devices manufactured by Intel and sold by    
// Intel or its authorized distributors.  Please refer to the applicable          
// agreement for further details.                                                 

// Generated by Intel(R) HLS Compiler, Version 18.1.0 Build 625

/////////////////////////////////////////////////////////////////
// MODULE fir_filter_internal
/////////////////////////////////////////////////////////////////
module fir_filter_internal
(
   input logic clock,
   input logic resetn,
   // AVST fir_in
   input logic fir_in_valid,
   output logic fir_in_ready,
   input logic [15:0] fir_in_data,
   // AVST fir_out
   output logic fir_out_valid,
   input logic fir_out_ready,
   output logic [31:0] fir_out_data,
   input logic start,
   output logic busy,
   output logic done,
   input logic stall
);
   // INST fir_filter_internal of fir_filter_function_wrapper
   fir_filter_function_wrapper fir_filter_internal
   (
      .clock(clock),
      .resetn(resetn),
      // AVST avst_iord_bl_fir_in
      .avst_iord_bl_fir_in_valid(fir_in_valid),
      .avst_iord_bl_fir_in_ready(fir_in_ready),
      .avst_iord_bl_fir_in_data(fir_in_data),
      // AVST avst_iowr_bl_fir_out
      .avst_iowr_bl_fir_out_valid(fir_out_valid),
      .avst_iowr_bl_fir_out_ready(fir_out_ready),
      .avst_iowr_bl_fir_out_data(fir_out_data),
      .start(start),
      .busy(busy),
      .done(done),
      .stall(stall)
   );

endmodule

